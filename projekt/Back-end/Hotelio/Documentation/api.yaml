{
  "openapi": "3.0.1",
  "info": {
    "title": "Hotelio",
    "version": "1.0"
  },
  "paths": {
    "/api/hotel/{hotelId}/room/{roomId}/additionalService": {
      "get": {
        "tags": [
          "AdditionalService"
        ],
        "summary": "Gets all aa and their data",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all aa",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          }
        }
      },
      "post": {
        "tags": [
          "AdditionalService"
        ],
        "summary": "Creates a new aa",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalService"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalService"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              }
            }
          },
          "201": {
            "description": "aa created successfully"
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          },
          "409": {
            "description": "aa with specified number already exists"
          }
        }
      }
    },
    "/api/hotel/{hotelId}/room/{roomId}/additionalService/{serviceId}": {
      "get": {
        "tags": [
          "AdditionalService"
        ],
        "summary": "Gets a specific aa",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found aa",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          },
          "404": {
            "description": "Aa with specified id was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "AdditionalService"
        ],
        "summary": "Deletes a specific aa",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "aa deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              }
            }
          },
          "404": {
            "description": "aa with specified id was not found"
          }
        }
      },
      "put": {
        "tags": [
          "AdditionalService"
        ],
        "summary": "Updates a specified aa",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalService"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalService"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "aa updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalService"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          },
          "400": {
            "description": "No parameters were used in API call"
          },
          "404": {
            "description": "aa with specified id was not found"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registers a new user.",
        "description": "<br>\r\n            Returns if the register action was successful.\r\n            ",
        "requestBody": {
          "description": "User's name and password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Returns success."
          },
          "400": {
            "description": "Bad request parameters were used."
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticates the user by providing an authentication token.",
        "description": "<br>\r\n            Returns JWT authentication token if successful.\r\n            ",
        "requestBody": {
          "description": "User's email and password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT authentication token returned."
          },
          "400": {
            "description": "User credentials were invalid."
          }
        }
      }
    },
    "/api/hotel": {
      "get": {
        "tags": [
          "Hotel"
        ],
        "summary": "Gets all available hotels.",
        "description": "<br>\r\n            Returns all hotels.\r\n            ",
        "responses": {
          "200": {
            "description": "List of hotels.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hotel"
        ],
        "summary": "Creates a new hotel.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hotel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Hotel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Hotel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "201": {
            "description": "Hotel created successfully."
          },
          "400": {
            "description": "Invalid parameters were entered."
          },
          "401": {
            "description": "User is unauthorized to perform this action."
          },
          "409": {
            "description": "Hotel with the same name already exists."
          }
        }
      }
    },
    "/api/hotel/{id}": {
      "get": {
        "tags": [
          "Hotel"
        ],
        "summary": "Fetches a specific hotel.",
        "description": "<br>\r\n            Returns hotel with its information.\r\n            ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "hotels's id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found hotel.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "400": {
            "description": "Hotel with specified id was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Hotel"
        ],
        "summary": "Deletes a specific hotel.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Hotel id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized to perform this action."
          },
          "404": {
            "description": "Hotel not found"
          }
        }
      },
      "put": {
        "tags": [
          "Hotel"
        ],
        "summary": "Updates a specific hotel.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hotel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Hotel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Hotel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hotel updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "400": {
            "description": "No parameters were entered"
          },
          "401": {
            "description": "User is unauthorized to perform this action."
          },
          "404": {
            "description": "Hotel not found"
          }
        }
      }
    },
    "/api/hotel/{hotelId}/room": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Gets all rooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all rooms returned",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          }
        }
      },
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Creates a new room",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "201": {
            "description": "room created"
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          },
          "404": {
            "description": "Dormitory with specified id was not found"
          },
          "409": {
            "description": "Room with specified number already exists"
          }
        }
      }
    },
    "/api/hotel/{hotelId}/room/{roomId}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Fetches a specific room",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is not authorized to perform this action",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "404": {
            "description": "room with specified id was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Room"
        ],
        "summary": "Deletes a specified room",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room was deleted successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          },
          "404": {
            "description": "Room with specified id was not found"
          }
        }
      },
      "put": {
        "tags": [
          "Room"
        ],
        "summary": "Updates a specific room's properties",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "room was updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          },
          "404": {
            "description": "room with specified id was not found"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets all users",
        "responses": {
          "200": {
            "description": "List of all users"
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets a specific user's information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User's id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Specific's user's info"
          },
          "401": {
            "description": "User is unauthorized to perform this action"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalService": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "room": {
            "$ref": "#/components/schemas/Room"
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Hotel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "rooms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Room"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Room": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "roomLevel": {
            "type": "integer",
            "format": "int32"
          },
          "roomType": {
            "$ref": "#/components/schemas/RoomType"
          },
          "hotel": {
            "$ref": "#/components/schemas/Hotel"
          }
        },
        "additionalProperties": false
      },
      "RoomType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    }
  }
}